{"ast":null,"code":"var _jsxFileName = \"/home/pci-27/Documents/Mayank/MERN/learn-app/src/components/create-with-validation.component.js\";\nimport React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nvar phoneRegEx = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nexport default class CreateUser extends Component {\n  render() {\n    return React.createElement(Formik, {\n      initialValues: {\n        full_name: '',\n        email: '',\n        contact_number: '',\n        gender: ''\n      },\n      validationSchema: Yup.object().shape({\n        full_name: Yup.string().required('Full Name is required'),\n        email: Yup.string().email('please enter valid email').required('Email is required'),\n        contact_number: Yup.string().matches(phoneRegEx, 'contact number is not valid').required('contact number is required'),\n        gender: Yup.string().required('please select gender')\n      }),\n      onSubmit: fields => {\n        console.log('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4));\n      },\n      render: ({\n        errors,\n        status,\n        touched\n      }) => React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"full_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Full Name\"), React.createElement(Field, {\n        name: \"full_name\",\n        type: \"text\",\n        className: 'form-control' + (errors.full_name && touched.full_name ? ' is-invalid' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"full_name\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Field, {\n        name: \"email\",\n        type: \"text\",\n        className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"email\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Field, {\n        name: \"email\",\n        type: \"text\",\n        className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"email\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"button\", {\n        type: \"reset\",\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Reset\"))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/pci-27/Documents/Mayank/MERN/learn-app/src/components/create-with-validation.component.js"],"names":["React","Component","Formik","Field","Form","ErrorMessage","Yup","axios","phoneRegEx","CreateUser","render","full_name","email","contact_number","gender","object","shape","string","required","matches","fields","console","log","JSON","stringify","errors","status","touched"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\nvar phoneRegEx = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nexport default class CreateUser extends Component {\n    \n    render(){\n        return (\n           <Formik \n                initialValues={{\n                    full_name:'',\n                    email:'',\n                    contact_number:'',\n                    gender:''\n                }}\n                validationSchema = {\n                    Yup.object().shape({\n                        full_name:Yup.string()\n                        .required('Full Name is required'),\n                        email:Yup.string()\n                        .email('please enter valid email')\n                        .required('Email is required'),\n                        contact_number:Yup.string()\n                        .matches(phoneRegEx,'contact number is not valid')\n                        .required('contact number is required'),\n                        gender:Yup.string()\n                        .required('please select gender')\n                    })}\n                    onSubmit={fields => {\n                        console.log('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\n                    }}\n\n                    render={({errors,status,touched}) => (\n                        <Form>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"full_name\">Full Name</label>\n                                <Field name=\"full_name\" type=\"text\" className={'form-control' + (errors.full_name && touched.full_name ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"full_name\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email</label>\n                                <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email</label>\n                                <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                                <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                            </div>\n                        <div className=\"form-group\">\n                            <button type=\"submit\" className=\"btn btn-primary mr-2\">Register</button>\n                            <button type=\"reset\" className=\"btn btn-secondary\">Reset</button>\n                        </div>\n                        </Form>\n                    )}\n                />\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}