{"ast":null,"code":"var _jsxFileName = \"/home/pci-27/Documents/Mayank/MERN/learn-app/src/components/login-user.component.js\";\nimport React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport classNames from 'classnames';\nconst initialValues = {\n  full_name: \"\",\n  email: \"\",\n  contact_number: \"\",\n  gender: '',\n  password: '',\n  cpassword: ''\n};\nexport default class Login extends Component {\n  render() {\n    return React.createElement(Formik, {\n      initialValues: initialValues,\n      validationSchema: Yup.object().shape({\n        full_name: Yup.string().required(\"Full Name is required\"),\n        email: Yup.string().email(\"please enter valid email\").required(\"Email is required\"),\n        contact_number: Yup.string().matches(phoneRegEx, \"contact number is not valid\").required(\"contact number is required\"),\n        password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n        cpassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm Password is required')\n      }),\n      onSubmit: (fields, {\n        resetForm\n      }) => {\n        const newUser = {\n          full_name: fields.full_name,\n          email: fields.email,\n          contact_number: fields.contact_number,\n          gender: fields.gender,\n          password: fields.password\n        };\n        axios.post(\"http://localhost:4000/register\", newUser).then(res => {\n          console.log(res.data);\n          this.props.history.push(\"/\");\n        });\n      },\n      render: ({\n        values,\n        errors,\n        status,\n        touched\n      }) => React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"full_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Full Name\"), React.createElement(Field, {\n        name: \"full_name\",\n        type: \"text\",\n        value: values.full_name,\n        className: \"form-control\" + (errors.full_name && touched.full_name ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"full_name\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Field, {\n        name: \"email\",\n        type: \"text\",\n        className: \"form-control\" + (errors.email && touched.email ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"email\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Contact Number\"), React.createElement(Field, {\n        name: \"contact_number\",\n        type: \"text\",\n        className: \"form-control\" + (errors.contact_number && touched.contact_number ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"contact_number\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), React.createElement(RadioButtonGroup, {\n        id: \"gender\",\n        label: \"gender\",\n        value: values.gender,\n        error: errors.gender,\n        touched: touched.gender,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Field, {\n        component: RadioButton,\n        name: \"gender\",\n        id: \"male\",\n        label: \"Male\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(Field, {\n        component: RadioButton,\n        name: \"gender\",\n        id: \"female\",\n        label: \"Female\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Field, {\n        name: \"password\",\n        type: \"password\",\n        className: \"form-control\" + (errors.password && touched.password ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"password\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"cpassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(Field, {\n        name: \"cpassword\",\n        type: \"password\",\n        className: \"form-control\" + (errors.cpassword && touched.cpassword ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"cpassword\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"button\", {\n        type: \"reset\",\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Reset\"))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/pci-27/Documents/Mayank/MERN/learn-app/src/components/login-user.component.js"],"names":["React","Component","Formik","Field","Form","ErrorMessage","Yup","axios","classNames","initialValues","full_name","email","contact_number","gender","password","cpassword","Login","render","object","shape","string","required","matches","phoneRegEx","min","oneOf","ref","fields","resetForm","newUser","post","then","res","console","log","data","props","history","push","values","errors","status","touched","RadioButton"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport classNames from 'classnames';\n\n\nconst initialValues = {\n    full_name: \"\",\n    email: \"\",\n    contact_number: \"\",\n    gender: '',\n    password:'',\n    cpassword:''\n  };\n\nexport default class Login extends Component {\n    \n    render(){\n        return (\n          <Formik\n            initialValues={initialValues}\n            validationSchema={Yup.object().shape({\n              full_name: Yup.string().required(\"Full Name is required\"),\n              email: Yup.string()\n                .email(\"please enter valid email\")\n                .required(\"Email is required\"),\n              contact_number: Yup.string()\n                .matches(phoneRegEx, \"contact number is not valid\")\n                .required(\"contact number is required\"),\n              password:Yup.string()\n                .min(6, 'Password must be at least 6 characters')\n                .required('Password is required'),\n              cpassword:Yup.string()\n              .oneOf([Yup.ref('password'), null], 'Passwords must match')\n              .required('Confirm Password is required')\n            })}\n            onSubmit={(fields, { resetForm }) => {\n              const newUser = {\n                full_name: fields.full_name,\n                email: fields.email,\n                contact_number: fields.contact_number,\n                gender: fields.gender,\n                password:fields.password\n              };\n\n              axios.post(\"http://localhost:4000/register\", newUser).then(res => {\n                console.log(res.data);\n                this.props.history.push(\"/\");\n              });\n            }}\n            render={({ values, errors, status, touched }) => (\n              <Form>\n                <div className=\"form-group\">\n                  <label htmlFor=\"full_name\">Full Name</label>\n                  <Field\n                    name=\"full_name\"\n                    type=\"text\"\n                    value={values.full_name}\n                    className={\n                      \"form-control\" +\n                      (errors.full_name && touched.full_name\n                        ? \" is-invalid\"\n                        : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"full_name\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Field\n                    name=\"email\"\n                    type=\"text\"\n                    className={\n                      \"form-control\" +\n                      (errors.email && touched.email ? \" is-invalid\" : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"email\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Contact Number</label>\n                  <Field\n                    name=\"contact_number\"\n                    type=\"text\"\n                    className={\n                      \"form-control\" +\n                      (errors.contact_number && touched.contact_number\n                        ? \" is-invalid\"\n                        : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"contact_number\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n\n          <RadioButtonGroup\n            id=\"gender\"\n            label=\"gender\"\n            value={values.gender}\n            error={errors.gender}\n            touched={touched.gender}\n          >\n            <Field\n              component={RadioButton}\n              name=\"gender\"\n              id=\"male\"\n              label=\"Male\"\n            />\n            <Field\n              component={RadioButton}\n              name=\"gender\"\n              id=\"female\"\n              label=\"Female\"\n            />\n          </RadioButtonGroup>\n\n          <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Field\n                    name=\"password\"\n                    type=\"password\"\n                    className={\n                      \"form-control\" +\n                      (errors.password && touched.password\n                        ? \" is-invalid\"\n                        : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"password\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"cpassword\">Confirm Password</label>\n                  <Field\n                    name=\"cpassword\"\n                    type=\"password\"\n                    className={\n                      \"form-control\" +\n                      (errors.cpassword && touched.cpassword\n                        ? \" is-invalid\"\n                        : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"cpassword\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button type=\"submit\" className=\"btn btn-primary mr-2\">\n                    Register\n                  </button>\n                  <button type=\"reset\" className=\"btn btn-secondary\">\n                    Reset\n                  </button>\n                </div>\n              </Form>\n            )}\n          />\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}