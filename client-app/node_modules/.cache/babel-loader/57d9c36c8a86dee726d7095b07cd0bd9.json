{"ast":null,"code":"import _objectWithoutProperties from \"/home/pci-27/Documents/Mayank/MERN/learn-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/pci-27/Documents/Mayank/MERN/learn-app/src/components/create-with-validation.component.js\";\nimport React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport classNames from 'classnames';\nvar phoneRegEx = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nconst initialValues = {\n  full_name: \"\",\n  email: \"\",\n  contact_number: \"\",\n  radioGroup: ''\n}; // Input feedback\n\nconst InputFeedback = ({\n  error\n}) => error ? React.createElement(\"div\", {\n  className: \"invalid-feedback\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, error) : null; // Radio input\n\n\nconst RadioButton = (_ref) => {\n  let _ref$field = _ref.field,\n      name = _ref$field.name,\n      value = _ref$field.value,\n      onChange = _ref$field.onChange,\n      onBlur = _ref$field.onBlur,\n      id = _ref.id,\n      label = _ref.label,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, [\"field\", \"id\", \"label\", \"className\"]);\n\n  return React.createElement(\"div\", {\n    className: \"form-check form-check-inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({\n    name: name,\n    id: id,\n    type: \"radio\",\n    value: id // could be something else for output?\n    ,\n    checked: id === value,\n    onChange: onChange,\n    onBlur: onBlur,\n    className: classNames('form-check-input')\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: id,\n    className: \"form-check-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, label));\n}; // Radio group\n\n\nconst RadioButtonGroup = ({\n  value,\n  error,\n  touched,\n  id,\n  label,\n  className,\n  children\n}) => {\n  const classes = classNames('input-fiel', {\n    'is-success': value || !error && touched,\n    // handle prefilled or user-filled\n    'is-error': !!error && touched\n  }, className);\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, label), children, touched && React.createElement(InputFeedback, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))));\n};\n\nexport default class CreateUser extends Component {\n  render() {\n    return React.createElement(Formik, {\n      initialValues: initialValues,\n      validationSchema: Yup.object().shape({\n        full_name: Yup.string().required(\"Full Name is required\"),\n        email: Yup.string().email(\"please enter valid email\").required(\"Email is required\"),\n        contact_number: Yup.string().matches(phoneRegEx, \"contact number is not valid\").required(\"contact number is required\"),\n        radioGroup: Yup.string().required(\"A radio option is required\")\n      }),\n      onSubmit: (fields, {\n        resetForm\n      }) => {\n        const newUser = {\n          full_name: fields.full_name,\n          email: fields.email,\n          contact_number: fields.contact_number,\n          gender: fields.gender\n        };\n        axios.post(\"http://localhost:4000/add\", newUser).then(res => {\n          console.log(res.data);\n        });\n        this.props.history.push(\"/\");\n      },\n      render: ({\n        values,\n        errors,\n        status,\n        touched\n      }) => React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"full_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Full Name\"), React.createElement(Field, {\n        name: \"full_name\",\n        type: \"text\",\n        value: values.full_name,\n        className: \"form-control\" + (errors.full_name && touched.full_name ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"full_name\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Field, {\n        name: \"email\",\n        type: \"text\",\n        className: \"form-control\" + (errors.email && touched.email ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"email\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Contact Number\"), React.createElement(Field, {\n        name: \"contact_number\",\n        type: \"text\",\n        className: \"form-control\" + (errors.contact_number && touched.contact_number ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"contact_number\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      })), React.createElement(RadioButtonGroup, {\n        id: \"radioGroup\",\n        label: \"gender\",\n        value: values.radioGroup,\n        error: errors.radioGroup,\n        touched: touched.radioGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Field, {\n        component: RadioButton,\n        name: \"radioGroup\",\n        id: \"radioOption1\",\n        label: \"Male\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(Field, {\n        component: RadioButton,\n        name: \"radioGroup\",\n        id: \"radioOption2\",\n        label: \"Female\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"button\", {\n        type: \"reset\",\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Reset\"))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/pci-27/Documents/Mayank/MERN/learn-app/src/components/create-with-validation.component.js"],"names":["React","Component","Formik","Field","Form","ErrorMessage","Yup","axios","classNames","phoneRegEx","initialValues","full_name","email","contact_number","radioGroup","InputFeedback","error","RadioButton","field","name","value","onChange","onBlur","id","label","className","props","RadioButtonGroup","touched","children","classes","CreateUser","render","object","shape","string","required","matches","fields","resetForm","newUser","gender","post","then","res","console","log","data","history","push","values","errors","status"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport classNames from 'classnames';\n\nvar phoneRegEx = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nconst initialValues = {\n    full_name: \"\",\n    email: \"\",\n    contact_number: \"\",\n    radioGroup: ''\n  };\n  \n  // Input feedback\nconst InputFeedback = ({ error }) =>\nerror ? (\n  <div className=\"invalid-feedback\">{error}</div>\n) : null;\n\n\n// Radio input\nconst RadioButton = ({\n  field: { name, value, onChange, onBlur },\n  id,\n  label,\n  className,\n  ...props\n}) => {\n  return (\n   \n    <div className=\"form-check form-check-inline\">\n      <input\n        name={name}\n        id={id}\n        type=\"radio\"\n        value={id} // could be something else for output?\n        checked={id === value}\n        onChange={onChange}\n        onBlur={onBlur}\n        className={classNames('form-check-input')}\n        {...props}\n      />\n      <label htmlFor={id} className=\"form-check-label\">\n        {label}\n      </label>\n    </div>\n  );\n};\n\n// Radio group\nconst RadioButtonGroup = ({\n  value,\n  error,\n  touched,\n  id,\n  label,\n  className,\n  children\n}) => {\n  const classes = classNames(\n    'input-fiel',\n    {\n      'is-success': value || (!error && touched), // handle prefilled or user-filled\n      'is-error': !!error && touched\n    },\n    className\n  );\n\n  return (\n    <div className=\"form-group\">\n    <div className={classes}>\n      <fieldset>\n        <legend>{label}</legend>\n        {children}\n        {touched &&\n          <InputFeedback error={error} />\n        }\n      </fieldset>\n    </div>\n    </div>\n  );\n};\n\nexport default class CreateUser extends Component {\n    \n    render(){\n        return (\n          <Formik\n            initialValues={initialValues}\n            validationSchema={Yup.object().shape({\n              full_name: Yup.string().required(\"Full Name is required\"),\n              email: Yup.string()\n                .email(\"please enter valid email\")\n                .required(\"Email is required\"),\n              contact_number: Yup.string()\n                .matches(phoneRegEx, \"contact number is not valid\")\n                .required(\"contact number is required\"),\n                radioGroup: Yup.string().required(\"A radio option is required\"),\n            })}\n            onSubmit={(fields, { resetForm }) => {\n              const newUser = {\n                full_name: fields.full_name,\n                email: fields.email,\n                contact_number: fields.contact_number,\n                gender: fields.gender\n              };\n\n              axios.post(\"http://localhost:4000/add\", newUser).then(res => {\n                console.log(res.data);\n              });\n              this.props.history.push(\"/\");\n            }}\n            render={({ values, errors, status, touched }) => (\n              <Form>\n                <div className=\"form-group\">\n                  <label htmlFor=\"full_name\">Full Name</label>\n                  <Field\n                    name=\"full_name\"\n                    type=\"text\"\n                    value={values.full_name}\n                    className={\n                      \"form-control\" +\n                      (errors.full_name && touched.full_name\n                        ? \" is-invalid\"\n                        : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"full_name\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Field\n                    name=\"email\"\n                    type=\"text\"\n                    className={\n                      \"form-control\" +\n                      (errors.email && touched.email ? \" is-invalid\" : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"email\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Contact Number</label>\n                  <Field\n                    name=\"contact_number\"\n                    type=\"text\"\n                    className={\n                      \"form-control\" +\n                      (errors.contact_number && touched.contact_number\n                        ? \" is-invalid\"\n                        : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"contact_number\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n\n          <RadioButtonGroup\n            id=\"radioGroup\"\n            label=\"gender\"\n            value={values.radioGroup}\n            error={errors.radioGroup}\n            touched={touched.radioGroup}\n          >\n            <Field\n              component={RadioButton}\n              name=\"radioGroup\"\n              id=\"radioOption1\"\n              label=\"Male\"\n            />\n            <Field\n              component={RadioButton}\n              name=\"radioGroup\"\n              id=\"radioOption2\"\n              label=\"Female\"\n            />\n          </RadioButtonGroup>\n\n                <div className=\"form-group\">\n                  <button type=\"submit\" className=\"btn btn-primary mr-2\">\n                    Register\n                  </button>\n                  <button type=\"reset\" className=\"btn btn-secondary\">\n                    Reset\n                  </button>\n                </div>\n              </Form>\n            )}\n          />\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}