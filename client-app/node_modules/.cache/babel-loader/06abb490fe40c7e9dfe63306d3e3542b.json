{"ast":null,"code":"import _objectWithoutProperties from \"/home/pci-27/Documents/Mayank/MERN/learn-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/pci-27/Documents/Mayank/MERN/learn-app/src/components/create-with-validation.component.js\";\nimport React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios'; // Input feedback\n\nconst InputFeedback = ({\n  error\n}) => error ? React.createElement(\"div\", {\n  className: classNames(\"input-feedback\"),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, error) : null; // Checkbox input\n\n\nconst Checkbox = (_ref) => {\n  let _ref$field = _ref.field,\n      name = _ref$field.name,\n      value = _ref$field.value,\n      onChange = _ref$field.onChange,\n      onBlur = _ref$field.onBlur,\n      _ref$form = _ref.form,\n      errors = _ref$form.errors,\n      touched = _ref$form.touched,\n      setFieldValue = _ref$form.setFieldValue,\n      id = _ref.id,\n      label = _ref.label,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, [\"field\", \"form\", \"id\", \"label\", \"className\"]);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: name,\n    id: id,\n    type: \"checkbox\",\n    value: value,\n    checked: value,\n    onChange: onChange,\n    onBlur: onBlur,\n    className: classNames(\"radio-button\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, label), touched[name] && React.createElement(InputFeedback, {\n    error: errors[name],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n}; // Checkbox group\n\n\nclass CheckboxGroup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const target = event.currentTarget;\n      let valueArray = [...this.props.value] || [];\n\n      if (target.checked) {\n        valueArray.push(target.id);\n      } else {\n        valueArray.splice(valueArray.indexOf(target.id), 1);\n      }\n\n      this.props.onChange(this.props.id, valueArray);\n    };\n\n    this.handleBlur = () => {\n      // take care of touched\n      this.props.onBlur(this.props.id, true);\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          value = _this$props.value,\n          error = _this$props.error,\n          touched = _this$props.touched,\n          label = _this$props.label,\n          className = _this$props.className,\n          children = _this$props.children;\n    const classes = classNames(\"input-field\", {\n      \"is-success\": value || !error && touched,\n      // handle prefilled or user-filled\n      \"is-error\": !!error && touched\n    }, className);\n    return React.createElement(\"div\", {\n      className: classes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, label), React.Children.map(children, child => {\n      return React.cloneElement(child, {\n        field: {\n          value: value.includes(child.props.id),\n          onChange: this.handleChange,\n          onBlur: this.handleBlur\n        }\n      });\n    }), touched && React.createElement(InputFeedback, {\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })));\n  }\n\n} // Radio input\n\n\nconst RadioButton = (_ref2) => {\n  let _ref2$field = _ref2.field,\n      name = _ref2$field.name,\n      value = _ref2$field.value,\n      onChange = _ref2$field.onChange,\n      onBlur = _ref2$field.onBlur,\n      id = _ref2.id,\n      label = _ref2.label,\n      className = _ref2.className,\n      props = _objectWithoutProperties(_ref2, [\"field\", \"id\", \"label\", \"className\"]);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({\n    name: name,\n    id: id,\n    type: \"radio\",\n    value: id // could be something else for output?\n    ,\n    checked: id === value,\n    onChange: onChange,\n    onBlur: onBlur,\n    className: classNames(\"radio-button\")\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, label));\n}; // Radio group\n\n\nconst RadioButtonGroup = ({\n  value,\n  error,\n  touched,\n  id,\n  label,\n  className,\n  children\n}) => {\n  const classes = classNames(\"input-field\", {\n    \"is-success\": value || !error && touched,\n    // handle prefilled or user-filled\n    \"is-error\": !!error && touched\n  }, className);\n  return React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, label), children, touched && React.createElement(InputFeedback, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })));\n};\n\nconst CreateUser = () => React.createElement(\"div\", {\n  className: \"CreateUser\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 150\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 151\n  },\n  __self: this\n}, \"Radio & checkbox inputs with Formik\"), React.createElement(Formik, {\n  initialValues: {\n    radioGroup: \"\",\n    checkboxGroup: [],\n    singleCheckbox: false\n  },\n  validationSchema: Yup.object().shape({\n    radioGroup: Yup.string().required(\"A radio option is required\"),\n    checkboxGroup: Yup.array().required(\"At least one checkbox is required\"),\n    singleCheckbox: Yup.bool().oneOf([true], \"Must agree to something\")\n  }),\n  onSubmit: (values, actions) => {\n    setTimeout(() => {\n      console.log(JSON.stringify(values, null, 2));\n      actions.setSubmitting(false);\n    }, 500);\n  },\n  render: ({\n    handleSubmit,\n    setFieldValue,\n    setFieldTouched,\n    values,\n    errors,\n    touched,\n    isSubmitting\n  }) => React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Single checkbox\"), React.createElement(Field, {\n    component: Checkbox,\n    name: \"singleCheckbox\",\n    id: \"singleCheckbox\",\n    label: \"Agree to something\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Checkbox group\"), React.createElement(CheckboxGroup, {\n    id: \"checkboxGroup\",\n    label: \"Which of these?\",\n    value: values.checkboxGroup,\n    error: errors.checkboxGroup,\n    touched: touched.checkboxGroup,\n    onChange: setFieldValue,\n    onBlur: setFieldTouched,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(Field, {\n    component: Checkbox,\n    name: \"checkboxGroup\",\n    id: \"checkbox1\",\n    label: \"Option 1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: Checkbox,\n    name: \"checkboxGroup\",\n    id: \"checkbox2\",\n    label: \"Option 2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: Checkbox,\n    name: \"checkboxGroup\",\n    id: \"checkbox3\",\n    label: \"Option 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  })), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, \"Radio group\"), React.createElement(RadioButtonGroup, {\n    id: \"radioGroup\",\n    label: \"One of these please\",\n    value: values.radioGroup,\n    error: errors.radioGroup,\n    touched: touched.radioGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(Field, {\n    component: RadioButton,\n    name: \"radioGroup\",\n    id: \"radioOption1\",\n    label: \"Choose this option\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: RadioButton,\n    name: \"radioGroup\",\n    id: \"radioOption2\",\n    label: \"Or choose this one\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  })), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, \"Single radio\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, \"Is that a valid use case?\"), React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"Submit\")),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 152\n  },\n  __self: this\n}));","map":{"version":3,"sources":["/home/pci-27/Documents/Mayank/MERN/learn-app/src/components/create-with-validation.component.js"],"names":["React","Component","Formik","Field","Form","ErrorMessage","Yup","axios","InputFeedback","error","classNames","Checkbox","field","name","value","onChange","onBlur","form","errors","touched","setFieldValue","id","label","className","props","CheckboxGroup","constructor","handleChange","event","target","currentTarget","valueArray","checked","push","splice","indexOf","handleBlur","render","children","classes","Children","map","child","cloneElement","includes","RadioButton","RadioButtonGroup","CreateUser","radioGroup","checkboxGroup","singleCheckbox","object","shape","string","required","array","bool","oneOf","values","actions","setTimeout","console","log","JSON","stringify","setSubmitting","handleSubmit","setFieldTouched","isSubmitting"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\n// Input feedback\nconst InputFeedback = ({ error }) =>\n  error ? <div className={classNames(\"input-feedback\")}>{error}</div> : null;\n\n// Checkbox input\nconst Checkbox = ({\n  field: { name, value, onChange, onBlur },\n  form: { errors, touched, setFieldValue },\n  id,\n  label,\n  className,\n  ...props\n}) => {\n  return (\n    <div>\n      <input\n        name={name}\n        id={id}\n        type=\"checkbox\"\n        value={value}\n        checked={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        className={classNames(\"radio-button\")}\n      />\n      <label htmlFor={id}>{label}</label>\n      {touched[name] && <InputFeedback error={errors[name]} />}\n    </div>\n  );\n};\n\n// Checkbox group\nclass CheckboxGroup extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleChange = event => {\n    const target = event.currentTarget;\n    let valueArray = [...this.props.value] || [];\n\n    if (target.checked) {\n      valueArray.push(target.id);\n    } else {\n      valueArray.splice(valueArray.indexOf(target.id), 1);\n    }\n\n    this.props.onChange(this.props.id, valueArray);\n  };\n\n  handleBlur = () => {\n    // take care of touched\n    this.props.onBlur(this.props.id, true);\n  };\n\n  render() {\n    const { value, error, touched, label, className, children } = this.props;\n\n    const classes = classNames(\n      \"input-field\",\n      {\n        \"is-success\": value || (!error && touched), // handle prefilled or user-filled\n        \"is-error\": !!error && touched\n      },\n      className\n    );\n\n    return (\n      <div className={classes}>\n        <fieldset>\n          <legend>{label}</legend>\n          {React.Children.map(children, child => {\n            return React.cloneElement(child, {\n              field: {\n                value: value.includes(child.props.id),\n                onChange: this.handleChange,\n                onBlur: this.handleBlur\n              }\n            });\n          })}\n          {touched && <InputFeedback error={error} />}\n        </fieldset>\n      </div>\n    );\n  }\n}\n\n// Radio input\nconst RadioButton = ({\n  field: { name, value, onChange, onBlur },\n  id,\n  label,\n  className,\n  ...props\n}) => {\n  return (\n    <div>\n      <input\n        name={name}\n        id={id}\n        type=\"radio\"\n        value={id} // could be something else for output?\n        checked={id === value}\n        onChange={onChange}\n        onBlur={onBlur}\n        className={classNames(\"radio-button\")}\n        {...props}\n      />\n      <label htmlFor={id}>{label}</label>\n    </div>\n  );\n};\n\n// Radio group\nconst RadioButtonGroup = ({\n  value,\n  error,\n  touched,\n  id,\n  label,\n  className,\n  children\n}) => {\n  const classes = classNames(\n    \"input-field\",\n    {\n      \"is-success\": value || (!error && touched), // handle prefilled or user-filled\n      \"is-error\": !!error && touched\n    },\n    className\n  );\n\n  return (\n    <div className={classes}>\n      <fieldset>\n        <legend>{label}</legend>\n        {children}\n        {touched && <InputFeedback error={error} />}\n      </fieldset>\n    </div>\n  );\n};\n\nconst CreateUser = () => (\n  <div className=\"CreateUser\">\n    <h1>Radio & checkbox inputs with Formik</h1>\n    <Formik\n      initialValues={{\n        radioGroup: \"\",\n        checkboxGroup: [],\n        singleCheckbox: false\n      }}\n      validationSchema={Yup.object().shape({\n        radioGroup: Yup.string().required(\"A radio option is required\"),\n        checkboxGroup: Yup.array().required(\n          \"At least one checkbox is required\"\n        ),\n        singleCheckbox: Yup.bool().oneOf([true], \"Must agree to something\")\n      })}\n      onSubmit={(values, actions) => {\n        setTimeout(() => {\n          console.log(JSON.stringify(values, null, 2));\n          actions.setSubmitting(false);\n        }, 500);\n      }}\n      render={({\n        handleSubmit,\n        setFieldValue,\n        setFieldTouched,\n        values,\n        errors,\n        touched,\n        isSubmitting\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <h2>Single checkbox</h2>\n          <Field\n            component={Checkbox}\n            name=\"singleCheckbox\"\n            id=\"singleCheckbox\"\n            label=\"Agree to something\"\n          />\n\n          <h2>Checkbox group</h2>\n          <CheckboxGroup\n            id=\"checkboxGroup\"\n            label=\"Which of these?\"\n            value={values.checkboxGroup}\n            error={errors.checkboxGroup}\n            touched={touched.checkboxGroup}\n            onChange={setFieldValue}\n            onBlur={setFieldTouched}\n          >\n            <Field\n              component={Checkbox}\n              name=\"checkboxGroup\"\n              id=\"checkbox1\"\n              label=\"Option 1\"\n            />\n            <Field\n              component={Checkbox}\n              name=\"checkboxGroup\"\n              id=\"checkbox2\"\n              label=\"Option 2\"\n            />\n            <Field\n              component={Checkbox}\n              name=\"checkboxGroup\"\n              id=\"checkbox3\"\n              label=\"Option 3\"\n            />\n          </CheckboxGroup>\n\n          <h2>Radio group</h2>\n          <RadioButtonGroup\n            id=\"radioGroup\"\n            label=\"One of these please\"\n            value={values.radioGroup}\n            error={errors.radioGroup}\n            touched={touched.radioGroup}\n          >\n            <Field\n              component={RadioButton}\n              name=\"radioGroup\"\n              id=\"radioOption1\"\n              label=\"Choose this option\"\n            />\n            <Field\n              component={RadioButton}\n              name=\"radioGroup\"\n              id=\"radioOption2\"\n              label=\"Or choose this one\"\n            />\n          </RadioButtonGroup>\n\n          <h2>Single radio</h2>\n          <p>Is that a valid use case?</p>\n\n          <button type=\"submit\" disabled={isSubmitting}>\n            Submit\n          </button>\n        </form>\n      )}\n    />\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}