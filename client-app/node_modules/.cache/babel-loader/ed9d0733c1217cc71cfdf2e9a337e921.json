{"ast":null,"code":"var _jsxFileName = \"/home/pci-27/Documents/Mayank/MERN/learn-app/src/components/login-user.component.js\";\nimport React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport classNames from 'classnames';\nconst initialValues = {\n  email: \"\",\n  password: ''\n};\nexport default class Login extends Component {\n  render() {\n    return React.createElement(Formik, {\n      initialValues: initialValues,\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email(\"please enter valid email\").required(\"Email is required\"),\n        password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required')\n      }),\n      onSubmit: (fields, {\n        resetForm\n      }) => {\n        const newUser = {\n          full_name: fields.full_name,\n          email: fields.email,\n          contact_number: fields.contact_number,\n          gender: fields.gender,\n          password: fields.password\n        };\n        axios.post(\"http://localhost:4000/register\", newUser).then(res => {\n          console.log(res.data);\n          this.props.history.push(\"/\");\n        });\n      },\n      render: ({\n        values,\n        errors,\n        status,\n        touched\n      }) => React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"full_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Full Name\"), React.createElement(Field, {\n        name: \"full_name\",\n        type: \"text\",\n        value: values.full_name,\n        className: \"form-control\" + (errors.full_name && touched.full_name ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"full_name\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Field, {\n        name: \"email\",\n        type: \"text\",\n        className: \"form-control\" + (errors.email && touched.email ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"email\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Contact Number\"), React.createElement(Field, {\n        name: \"contact_number\",\n        type: \"text\",\n        className: \"form-control\" + (errors.contact_number && touched.contact_number ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"contact_number\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(RadioButtonGroup, {\n        id: \"gender\",\n        label: \"gender\",\n        value: values.gender,\n        error: errors.gender,\n        touched: touched.gender,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Field, {\n        component: RadioButton,\n        name: \"gender\",\n        id: \"male\",\n        label: \"Male\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Field, {\n        component: RadioButton,\n        name: \"gender\",\n        id: \"female\",\n        label: \"Female\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Field, {\n        name: \"password\",\n        type: \"password\",\n        className: \"form-control\" + (errors.password && touched.password ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"password\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"cpassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(Field, {\n        name: \"cpassword\",\n        type: \"password\",\n        className: \"form-control\" + (errors.cpassword && touched.cpassword ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"cpassword\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"button\", {\n        type: \"reset\",\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Reset\"))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/pci-27/Documents/Mayank/MERN/learn-app/src/components/login-user.component.js"],"names":["React","Component","Formik","Field","Form","ErrorMessage","Yup","axios","classNames","initialValues","email","password","Login","render","object","shape","string","required","min","fields","resetForm","newUser","full_name","contact_number","gender","post","then","res","console","log","data","props","history","push","values","errors","status","touched","RadioButton","cpassword"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport classNames from 'classnames';\n\n\nconst initialValues = {\n    email: \"\",\n    password:''\n  };\n\nexport default class Login extends Component {\n    \n    render(){\n        return (\n          <Formik\n            initialValues={initialValues}\n            validationSchema={Yup.object().shape({\n              email: Yup.string()\n                .email(\"please enter valid email\")\n                .required(\"Email is required\"),\n              password:Yup.string()\n                .min(6, 'Password must be at least 6 characters')\n                .required('Password is required')\n            })}\n            onSubmit={(fields, { resetForm }) => {\n              const newUser = {\n                full_name: fields.full_name,\n                email: fields.email,\n                contact_number: fields.contact_number,\n                gender: fields.gender,\n                password:fields.password\n              };\n\n              axios.post(\"http://localhost:4000/register\", newUser).then(res => {\n                console.log(res.data);\n                this.props.history.push(\"/\");\n              });\n            }}\n            render={({ values, errors, status, touched }) => (\n              <Form>\n                <div className=\"form-group\">\n                  <label htmlFor=\"full_name\">Full Name</label>\n                  <Field\n                    name=\"full_name\"\n                    type=\"text\"\n                    value={values.full_name}\n                    className={\n                      \"form-control\" +\n                      (errors.full_name && touched.full_name\n                        ? \" is-invalid\"\n                        : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"full_name\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Field\n                    name=\"email\"\n                    type=\"text\"\n                    className={\n                      \"form-control\" +\n                      (errors.email && touched.email ? \" is-invalid\" : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"email\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Contact Number</label>\n                  <Field\n                    name=\"contact_number\"\n                    type=\"text\"\n                    className={\n                      \"form-control\" +\n                      (errors.contact_number && touched.contact_number\n                        ? \" is-invalid\"\n                        : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"contact_number\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n\n          <RadioButtonGroup\n            id=\"gender\"\n            label=\"gender\"\n            value={values.gender}\n            error={errors.gender}\n            touched={touched.gender}\n          >\n            <Field\n              component={RadioButton}\n              name=\"gender\"\n              id=\"male\"\n              label=\"Male\"\n            />\n            <Field\n              component={RadioButton}\n              name=\"gender\"\n              id=\"female\"\n              label=\"Female\"\n            />\n          </RadioButtonGroup>\n\n          <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Field\n                    name=\"password\"\n                    type=\"password\"\n                    className={\n                      \"form-control\" +\n                      (errors.password && touched.password\n                        ? \" is-invalid\"\n                        : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"password\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"cpassword\">Confirm Password</label>\n                  <Field\n                    name=\"cpassword\"\n                    type=\"password\"\n                    className={\n                      \"form-control\" +\n                      (errors.cpassword && touched.cpassword\n                        ? \" is-invalid\"\n                        : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"cpassword\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button type=\"submit\" className=\"btn btn-primary mr-2\">\n                    Register\n                  </button>\n                  <button type=\"reset\" className=\"btn btn-secondary\">\n                    Reset\n                  </button>\n                </div>\n              </Form>\n            )}\n          />\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}