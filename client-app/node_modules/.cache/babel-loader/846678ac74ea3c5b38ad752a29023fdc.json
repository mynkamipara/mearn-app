{"ast":null,"code":"import _defineProperty from \"/home/pci-27/Documents/Mayank/MERN/learn-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/pci-27/Documents/Mayank/MERN/learn-app/src/components/create-with-validation.component.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport classNames from 'classnames';\nimport InputGroup from \"input-group.component\";\nvar phoneRegEx = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nconst initialValues = {\n  full_name: \"\",\n  email: \"\",\n  contact_number: \"\",\n  gender: ''\n};\n\nconst RadioButtonGroup = () => _objectSpread({\n  field: {\n    name,\n    value,\n    onChange,\n    onBlur\n  },\n  id,\n  label,\n  className\n}, props);\n\nexport default class CreateUser extends Component {\n  render() {\n    return React.createElement(Formik, {\n      initialValues: initialValues,\n      validationSchema: Yup.object().shape({\n        full_name: Yup.string().required(\"Full Name is required\"),\n        email: Yup.string().email(\"please enter valid email\").required(\"Email is required\"),\n        contact_number: Yup.string().matches(phoneRegEx, \"contact number is not valid\").required(\"contact number is required\"),\n        gender: Yup.string().required(\"A radio option is required\")\n      }),\n      onSubmit: (fields, {\n        resetForm\n      }) => {\n        const newUser = {\n          full_name: fields.full_name,\n          email: fields.email,\n          contact_number: fields.contact_number,\n          gender: fields.gender\n        };\n        axios.post(\"http://localhost:4000/add\", newUser).then(res => {\n          console.log(res.data);\n        });\n        this.props.history.push(\"/\");\n      },\n      render: ({\n        values,\n        errors,\n        status,\n        touched\n      }) => React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"full_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Full Name\"), React.createElement(Field, {\n        name: \"full_name\",\n        type: \"text\",\n        value: values.full_name,\n        className: \"form-control\" + (errors.full_name && touched.full_name ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"full_name\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Field, {\n        name: \"email\",\n        type: \"text\",\n        className: \"form-control\" + (errors.email && touched.email ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"email\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Contact Number\"), React.createElement(Field, {\n        name: \"contact_number\",\n        type: \"text\",\n        className: \"form-control\" + (errors.contact_number && touched.contact_number ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"contact_number\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(RadioButtonGroup, {\n        id: \"gender\",\n        label: \"gender\",\n        value: values.gender,\n        error: errors.gender,\n        touched: touched.gender,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Field, {\n        component: RadioButton,\n        name: \"gender\",\n        id: \"male\",\n        label: \"Male\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(Field, {\n        component: RadioButton,\n        name: \"gender\",\n        id: \"female\",\n        label: \"Female\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"button\", {\n        type: \"reset\",\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Reset\"))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/pci-27/Documents/Mayank/MERN/learn-app/src/components/create-with-validation.component.js"],"names":["React","Component","Formik","Field","Form","ErrorMessage","Yup","axios","classNames","InputGroup","phoneRegEx","initialValues","full_name","email","contact_number","gender","RadioButtonGroup","field","name","value","onChange","onBlur","id","label","className","props","CreateUser","render","object","shape","string","required","matches","fields","resetForm","newUser","post","then","res","console","log","data","history","push","values","errors","status","touched","RadioButton"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport classNames from 'classnames';\nimport InputGroup from \"input-group.component\";\n\nvar phoneRegEx = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nconst initialValues = {\n    full_name: \"\",\n    email: \"\",\n    contact_number: \"\",\n    gender: ''\n  };\n\n const RadioButtonGroup =()=>\n  ({\n    field: { name, value, onChange, onBlur },\n    id,\n    label,\n    className,\n    ...props\n  })\n \n  \n\nexport default class CreateUser extends Component {\n    \n    render(){\n        return (\n          <Formik\n            initialValues={initialValues}\n            validationSchema={Yup.object().shape({\n              full_name: Yup.string().required(\"Full Name is required\"),\n              email: Yup.string()\n                .email(\"please enter valid email\")\n                .required(\"Email is required\"),\n              contact_number: Yup.string()\n                .matches(phoneRegEx, \"contact number is not valid\")\n                .required(\"contact number is required\"),\n                gender: Yup.string().required(\"A radio option is required\"),\n            })}\n            onSubmit={(fields, { resetForm }) => {\n              const newUser = {\n                full_name: fields.full_name,\n                email: fields.email,\n                contact_number: fields.contact_number,\n                gender: fields.gender\n              };\n\n              axios.post(\"http://localhost:4000/add\", newUser).then(res => {\n                console.log(res.data);\n              });\n              this.props.history.push(\"/\");\n            }}\n            render={({ values, errors, status, touched }) => (\n              <Form>\n                <div className=\"form-group\">\n                  <label htmlFor=\"full_name\">Full Name</label>\n                  <Field\n                    name=\"full_name\"\n                    type=\"text\"\n                    value={values.full_name}\n                    className={\n                      \"form-control\" +\n                      (errors.full_name && touched.full_name\n                        ? \" is-invalid\"\n                        : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"full_name\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Field\n                    name=\"email\"\n                    type=\"text\"\n                    className={\n                      \"form-control\" +\n                      (errors.email && touched.email ? \" is-invalid\" : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"email\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Contact Number</label>\n                  <Field\n                    name=\"contact_number\"\n                    type=\"text\"\n                    className={\n                      \"form-control\" +\n                      (errors.contact_number && touched.contact_number\n                        ? \" is-invalid\"\n                        : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"contact_number\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n\n          <RadioButtonGroup\n            id=\"gender\"\n            label=\"gender\"\n            value={values.gender}\n            error={errors.gender}\n            touched={touched.gender}\n          >\n            <Field\n              component={RadioButton}\n              name=\"gender\"\n              id=\"male\"\n              label=\"Male\"\n            />\n            <Field\n              component={RadioButton}\n              name=\"gender\"\n              id=\"female\"\n              label=\"Female\"\n            />\n          </RadioButtonGroup>\n\n                <div className=\"form-group\">\n                  <button type=\"submit\" className=\"btn btn-primary mr-2\">\n                    Register\n                  </button>\n                  <button type=\"reset\" className=\"btn btn-secondary\">\n                    Reset\n                  </button>\n                </div>\n              </Form>\n            )}\n          />\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}