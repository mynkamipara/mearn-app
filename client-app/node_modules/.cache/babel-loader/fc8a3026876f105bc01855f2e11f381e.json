{"ast":null,"code":"var _jsxFileName = \"/home/pci-27/Documents/Mayank/MERN/learn-app/src/components/login-user.component.js\";\nimport React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nconst initialValues = {\n  email: \"\",\n  password: ''\n};\nexport default class Login extends Component {\n  render() {\n    return React.createElement(Formik, {\n      initialValues: initialValues,\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email(\"please enter valid email\").required(\"Email is required\"),\n        password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required')\n      }),\n      onSubmit: (fields, {\n        resetForm\n      }) => {\n        const newUser = {\n          email: fields.email,\n          password: fields.password\n        };\n        axios.post(\"http://localhost:4000/login\", newUser).then(res => {\n          // setter\n          //localStorage.setItem('myData', res.data);\n          console.log(res.data); //this.props.history.push(\"/\");\n        }).catch(function (error) {\n          console.log(error);\n        });\n      },\n      render: ({\n        values,\n        errors,\n        status,\n        touched\n      }) => React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Field, {\n        name: \"email\",\n        type: \"text\",\n        className: \"form-control\" + (errors.email && touched.email ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"email\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Field, {\n        name: \"password\",\n        type: \"password\",\n        className: \"form-control\" + (errors.password && touched.password ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"password\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Login\"))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/pci-27/Documents/Mayank/MERN/learn-app/src/components/login-user.component.js"],"names":["React","Component","Formik","Field","Form","ErrorMessage","Yup","axios","initialValues","email","password","Login","render","object","shape","string","required","min","fields","resetForm","newUser","post","then","res","console","log","data","catch","error","values","errors","status","touched"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\n\nconst initialValues = {\n    email: \"\",\n    password:''\n  };\n\nexport default class Login extends Component {\n    \n    render(){\n        return (\n          <Formik\n            initialValues={initialValues}\n            validationSchema={Yup.object().shape({\n              email: Yup.string()\n                .email(\"please enter valid email\")\n                .required(\"Email is required\"),\n              password:Yup.string()\n                .min(6, 'Password must be at least 6 characters')\n                .required('Password is required')\n            })}\n            onSubmit={(fields, { resetForm }) => {\n              const newUser = {\n                email: fields.email,\n                password:fields.password\n              };\n\n              axios.post(\"http://localhost:4000/login\", newUser).then(res => {\n                // setter\n                  //localStorage.setItem('myData', res.data);\n                  console.log(res.data);\n                //this.props.history.push(\"/\");\n              }).catch(function (error){\n                console.log(error)\n              });\n            }}\n            render={({ values, errors, status, touched }) => (\n              <Form>\n              \n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Field\n                    name=\"email\"\n                    type=\"text\"\n                    className={\n                      \"form-control\" +\n                      (errors.email && touched.email ? \" is-invalid\" : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"email\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n           \n\n          <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Field\n                    name=\"password\"\n                    type=\"password\"\n                    className={\n                      \"form-control\" +\n                      (errors.password && touched.password\n                        ? \" is-invalid\"\n                        : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"password\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <button type=\"submit\" className=\"btn btn-primary mr-2\">\n                    Login\n                  </button>\n                </div>\n              </Form>\n            )}\n          />\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}