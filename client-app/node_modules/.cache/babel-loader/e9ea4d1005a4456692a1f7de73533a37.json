{"ast":null,"code":"import _objectWithoutProperties from \"/home/pci-27/Documents/Mayank/MERN/learn-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/pci-27/Documents/Mayank/MERN/learn-app/src/components/register-user.component.js\";\nimport React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport classNames from 'classnames';\nvar phoneRegEx = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nconst initialValues = {\n  full_name: \"\",\n  email: \"\",\n  contact_number: \"\",\n  gender: '',\n  password: '',\n  cpassword: ''\n}; // Input feedback\n\nconst InputFeedback = ({\n  error\n}) => error ? React.createElement(\"div\", {\n  className: \"input-feedback\",\n  style: {\n    width: \"100%\",\n    marginTop: \".25rem\",\n    fontSize: \" 80%\",\n    color: \" #dc3545\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, error) : null;\n\nconst InputAuthError = ({\n  error\n}) => error ? React.createElement(\"div\", {\n  className: \"input-feedback\",\n  style: {\n    width: \"100%\",\n    marginTop: \".25rem\",\n    fontSize: \" 80%\",\n    color: \" #dc3545\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, error) : null; // Radio input\n\n\nconst RadioButton = (_ref) => {\n  let _ref$field = _ref.field,\n      name = _ref$field.name,\n      value = _ref$field.value,\n      onChange = _ref$field.onChange,\n      onBlur = _ref$field.onBlur,\n      id = _ref.id,\n      label = _ref.label,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, [\"field\", \"id\", \"label\", \"className\"]);\n\n  return React.createElement(\"div\", {\n    className: \"form-check form-check-inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({\n    name: name,\n    id: id,\n    type: \"radio\",\n    value: id // could be something else for output?\n    ,\n    checked: id === value,\n    onChange: onChange,\n    onBlur: onBlur,\n    className: classNames('form-check-input')\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: id,\n    className: \"form-check-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, label));\n}; // Radio group\n\n\nconst RadioButtonGroup = ({\n  value,\n  error,\n  touched,\n  id,\n  label,\n  className,\n  children\n}) => {\n  const classes = classNames('input-fiel', {\n    'is-success': value || !error && touched,\n    // handle prefilled or user-filled\n    'is-error': !!error && touched\n  }, className);\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, label), children, touched && React.createElement(InputFeedback, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))));\n};\n\nexport default class Register extends Component {\n  render() {\n    return React.createElement(Formik, {\n      initialValues: initialValues,\n      validationSchema: Yup.object().shape({\n        full_name: Yup.string().required(\"Full Name is required\"),\n        email: Yup.string().email(\"please enter valid email\").required(\"Email is required\"),\n        contact_number: Yup.string().matches(phoneRegEx, \"contact number is not valid\").required(\"contact number is required\"),\n        password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n        cpassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm Password is required')\n      }),\n      onSubmit: (fields, {\n        resetForm\n      }) => {\n        const newUser = {\n          full_name: fields.full_name,\n          email: fields.email,\n          contact_number: fields.contact_number,\n          gender: fields.gender,\n          password: fields.password\n        };\n        axios.post(\"http://localhost:4000/register\", newUser).then(res => {\n          console.log(res.data);\n          this.props.history.push(\"/\");\n        });\n      },\n      render: ({\n        values,\n        errors,\n        status,\n        touched\n      }) => React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"full_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Full Name\"), React.createElement(Field, {\n        name: \"full_name\",\n        type: \"text\",\n        value: values.full_name,\n        className: \"form-control\" + (errors.full_name && touched.full_name ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"full_name\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Field, {\n        name: \"email\",\n        type: \"text\",\n        className: \"form-control\" + (errors.email && touched.email ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"email\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Contact Number\"), React.createElement(Field, {\n        name: \"contact_number\",\n        type: \"text\",\n        className: \"form-control\" + (errors.contact_number && touched.contact_number ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"contact_number\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })), React.createElement(RadioButtonGroup, {\n        id: \"gender\",\n        label: \"gender\",\n        value: values.gender,\n        error: errors.gender,\n        touched: touched.gender,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Field, {\n        component: RadioButton,\n        name: \"gender\",\n        id: \"male\",\n        label: \"Male\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(Field, {\n        component: RadioButton,\n        name: \"gender\",\n        id: \"female\",\n        label: \"Female\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Field, {\n        name: \"password\",\n        type: \"password\",\n        className: \"form-control\" + (errors.password && touched.password ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"password\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"cpassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(Field, {\n        name: \"cpassword\",\n        type: \"password\",\n        className: \"form-control\" + (errors.cpassword && touched.cpassword ? \" is-invalid\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"cpassword\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"button\", {\n        type: \"reset\",\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Reset\"))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/pci-27/Documents/Mayank/MERN/learn-app/src/components/register-user.component.js"],"names":["React","Component","Formik","Field","Form","ErrorMessage","Yup","axios","classNames","phoneRegEx","initialValues","full_name","email","contact_number","gender","password","cpassword","InputFeedback","error","width","marginTop","fontSize","color","InputAuthError","RadioButton","field","name","value","onChange","onBlur","id","label","className","props","RadioButtonGroup","touched","children","classes","Register","render","object","shape","string","required","matches","min","oneOf","ref","fields","resetForm","newUser","post","then","res","console","log","data","history","push","values","errors","status"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAGA,IAAIC,UAAU,GAAG,yGAAjB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,SAAS,EAAE,EADO;AAElBC,EAAAA,KAAK,EAAE,EAFW;AAGlBC,EAAAA,cAAc,EAAE,EAHE;AAIlBC,EAAAA,MAAM,EAAE,EAJU;AAKlBC,EAAAA,QAAQ,EAAC,EALS;AAMlBC,EAAAA,SAAS,EAAC;AANQ,CAAtB,C,CASE;;AACF,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACtBA,KAAK,GACH;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAgC,EAAA,KAAK,EAAE;AAACC,IAAAA,KAAK,EAAE,MAAR;AAAeC,IAAAA,SAAS,EAAE,QAA1B;AAAmCC,IAAAA,QAAQ,EAAC,MAA5C;AAAmDC,IAAAA,KAAK,EAAC;AAAzD,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA8GJ,KAA9G,CADG,GAED,IAHJ;;AAKA,MAAMK,cAAc,GAAG,CAAC;AAAEL,EAAAA;AAAF,CAAD,KACvBA,KAAK,GACH;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAgC,EAAA,KAAK,EAAE;AAACC,IAAAA,KAAK,EAAE,MAAR;AAAeC,IAAAA,SAAS,EAAE,QAA1B;AAAmCC,IAAAA,QAAQ,EAAC,MAA5C;AAAmDC,IAAAA,KAAK,EAAC;AAAzD,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA8GJ,KAA9G,CADG,GAED,IAHJ,C,CAMA;;;AACA,MAAMM,WAAW,GAAG,UAMd;AAAA,wBALJC,KAKI;AAAA,MALKC,IAKL,cALKA,IAKL;AAAA,MALWC,KAKX,cALWA,KAKX;AAAA,MALkBC,QAKlB,cALkBA,QAKlB;AAAA,MAL4BC,MAK5B,cAL4BA,MAK5B;AAAA,MAJJC,EAII,QAJJA,EAII;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADDC,KACC;;AACJ,SAEE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAEP,IADR;AAEE,IAAA,EAAE,EAAEI,EAFN;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAEA,EAJT,CAIa;AAJb;AAKE,IAAA,OAAO,EAAEA,EAAE,KAAKH,KALlB;AAME,IAAA,QAAQ,EAAEC,QANZ;AAOE,IAAA,MAAM,EAAEC,MAPV;AAQE,IAAA,SAAS,EAAErB,UAAU,CAAC,kBAAD;AARvB,KASMyB,KATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAYE;AAAO,IAAA,OAAO,EAAEH,EAAhB;AAAoB,IAAA,SAAS,EAAC,kBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KADH,CAZF,CAFF;AAmBD,CA1BD,C,CA4BA;;;AACA,MAAMG,gBAAgB,GAAG,CAAC;AACxBP,EAAAA,KADwB;AAExBT,EAAAA,KAFwB;AAGxBiB,EAAAA,OAHwB;AAIxBL,EAAAA,EAJwB;AAKxBC,EAAAA,KALwB;AAMxBC,EAAAA,SANwB;AAOxBI,EAAAA;AAPwB,CAAD,KAQnB;AACJ,QAAMC,OAAO,GAAG7B,UAAU,CACxB,YADwB,EAExB;AACE,kBAAcmB,KAAK,IAAK,CAACT,KAAD,IAAUiB,OADpC;AAC8C;AAC5C,gBAAY,CAAC,CAACjB,KAAF,IAAWiB;AAFzB,GAFwB,EAMxBH,SANwB,CAA1B;AASA,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAEK,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASN,KAAT,CADF,EAEGK,QAFH,EAGGD,OAAO,IACN,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEjB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF,CADA,CADF;AAaD,CA/BD;;AAiCA,eAAe,MAAMoB,QAAN,SAAuBrC,SAAvB,CAAiC;AAE5CsC,EAAAA,MAAM,GAAE;AACJ,WACE,oBAAC,MAAD;AACE,MAAA,aAAa,EAAE7B,aADjB;AAEE,MAAA,gBAAgB,EAAEJ,GAAG,CAACkC,MAAJ,GAAaC,KAAb,CAAmB;AACnC9B,QAAAA,SAAS,EAAEL,GAAG,CAACoC,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB,CADwB;AAEnC/B,QAAAA,KAAK,EAAEN,GAAG,CAACoC,MAAJ,GACJ9B,KADI,CACE,0BADF,EAEJ+B,QAFI,CAEK,mBAFL,CAF4B;AAKnC9B,QAAAA,cAAc,EAAEP,GAAG,CAACoC,MAAJ,GACbE,OADa,CACLnC,UADK,EACO,6BADP,EAEbkC,QAFa,CAEJ,4BAFI,CALmB;AAQnC5B,QAAAA,QAAQ,EAACT,GAAG,CAACoC,MAAJ,GACNG,GADM,CACF,CADE,EACC,wCADD,EAENF,QAFM,CAEG,sBAFH,CAR0B;AAWnC3B,QAAAA,SAAS,EAACV,GAAG,CAACoC,MAAJ,GACTI,KADS,CACH,CAACxC,GAAG,CAACyC,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CADG,EAC0B,sBAD1B,EAETJ,QAFS,CAEA,8BAFA;AAXyB,OAAnB,CAFpB;AAiBE,MAAA,QAAQ,EAAE,CAACK,MAAD,EAAS;AAAEC,QAAAA;AAAF,OAAT,KAA2B;AACnC,cAAMC,OAAO,GAAG;AACdvC,UAAAA,SAAS,EAAEqC,MAAM,CAACrC,SADJ;AAEdC,UAAAA,KAAK,EAAEoC,MAAM,CAACpC,KAFA;AAGdC,UAAAA,cAAc,EAAEmC,MAAM,CAACnC,cAHT;AAIdC,UAAAA,MAAM,EAAEkC,MAAM,CAAClC,MAJD;AAKdC,UAAAA,QAAQ,EAACiC,MAAM,CAACjC;AALF,SAAhB;AAQAR,QAAAA,KAAK,CAAC4C,IAAN,CAAW,gCAAX,EAA6CD,OAA7C,EAAsDE,IAAtD,CAA2DC,GAAG,IAAI;AAChEC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACA,eAAKvB,KAAL,CAAWwB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,SAHD;AAID,OA9BH;AA+BE,MAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,MAAV;AAAkBC,QAAAA,MAAlB;AAA0B1B,QAAAA;AAA1B,OAAD,KAEN,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEwB,MAAM,CAAChD,SAHhB;AAIE,QAAA,SAAS,EACP,kBACCiD,MAAM,CAACjD,SAAP,IAAoBwB,OAAO,CAACxB,SAA5B,GACG,aADH,GAEG,EAHJ,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAaE,oBAAC,YAAD;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,SAAS,EAAC,KAFZ;AAGE,QAAA,SAAS,EAAC,kBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,CADF,EAoBE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,SAAS,EACP,kBACCiD,MAAM,CAAChD,KAAP,IAAgBuB,OAAO,CAACvB,KAAxB,GAAgC,aAAhC,GAAgD,EADjD,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAUE,oBAAC,YAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,SAAS,EAAC,KAFZ;AAGE,QAAA,SAAS,EAAC,kBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CApBF,EAoCE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,gBADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,SAAS,EACP,kBACCgD,MAAM,CAAC/C,cAAP,IAAyBsB,OAAO,CAACtB,cAAjC,GACG,aADH,GAEG,EAHJ,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAYE,oBAAC,YAAD;AACE,QAAA,IAAI,EAAC,gBADP;AAEE,QAAA,SAAS,EAAC,KAFZ;AAGE,QAAA,SAAS,EAAC,kBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,CApCF,EAuDJ,oBAAC,gBAAD;AACE,QAAA,EAAE,EAAC,QADL;AAEE,QAAA,KAAK,EAAC,QAFR;AAGE,QAAA,KAAK,EAAE8C,MAAM,CAAC7C,MAHhB;AAIE,QAAA,KAAK,EAAE8C,MAAM,CAAC9C,MAJhB;AAKE,QAAA,OAAO,EAAEqB,OAAO,CAACrB,MALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAEU,WADb;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,EAAE,EAAC,MAHL;AAIE,QAAA,KAAK,EAAC,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAaE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAEA,WADb;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,EAAE,EAAC,QAHL;AAIE,QAAA,KAAK,EAAC,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,CAvDI,EA4EJ;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADR,EAEQ,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,SAAS,EACP,kBACCoC,MAAM,CAAC7C,QAAP,IAAmBoB,OAAO,CAACpB,QAA3B,GACG,aADH,GAEG,EAHJ,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR,EAYQ,oBAAC,YAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAC,KAFZ;AAGE,QAAA,SAAS,EAAC,kBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZR,CA5EI,EA+FE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,SAAS,EACP,kBACC6C,MAAM,CAAC5C,SAAP,IAAoBmB,OAAO,CAACnB,SAA5B,GACG,aADH,GAEG,EAHJ,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAYE,oBAAC,YAAD;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,SAAS,EAAC,KAFZ;AAGE,QAAA,SAAS,EAAC,kBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,CA/FF,EAkHE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAIE;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,SAAS,EAAC,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CAlHF,CAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAgKH;;AAnK2C","sourcesContent":["import React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport classNames from 'classnames';\n\n\nvar phoneRegEx = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst initialValues = {\n    full_name: \"\",\n    email: \"\",\n    contact_number: \"\",\n    gender: '',\n    password:'',\n    cpassword:''\n  };\n  \n  // Input feedback\nconst InputFeedback = ({ error }) =>\nerror ? (\n  <div className=\"input-feedback\" style={{width: \"100%\",marginTop: \".25rem\",fontSize:\" 80%\",color:\" #dc3545\"}}>{error}</div>\n) : null;\n\nconst InputAuthError = ({ error }) =>\nerror ? (\n  <div className=\"input-feedback\" style={{width: \"100%\",marginTop: \".25rem\",fontSize:\" 80%\",color:\" #dc3545\"}}>{error}</div>\n) : null;\n\n\n// Radio input\nconst RadioButton = ({\n  field: { name, value, onChange, onBlur },\n  id,\n  label,\n  className,\n  ...props\n}) => {\n  return (\n   \n    <div className=\"form-check form-check-inline\">\n      <input\n        name={name}\n        id={id}\n        type=\"radio\"\n        value={id} // could be something else for output?\n        checked={id === value}\n        onChange={onChange}\n        onBlur={onBlur}\n        className={classNames('form-check-input')}\n        {...props}\n      />\n      <label htmlFor={id} className=\"form-check-label\">\n        {label}\n      </label>\n    </div>\n  );\n};\n\n// Radio group\nconst RadioButtonGroup = ({\n  value,\n  error,\n  touched,\n  id,\n  label,\n  className,\n  children\n}) => {\n  const classes = classNames(\n    'input-fiel',\n    {\n      'is-success': value || (!error && touched), // handle prefilled or user-filled\n      'is-error': !!error && touched\n    },\n    className\n  );\n\n  return (\n    <div className=\"form-group\">\n    <div className={classes}>\n      <fieldset>\n        <legend>{label}</legend>\n        {children}\n        {touched &&\n          <InputFeedback error={error} />\n        }\n      </fieldset>\n    </div>\n    </div>\n  );\n};\n\nexport default class Register extends Component {\n    \n    render(){\n        return (\n          <Formik\n            initialValues={initialValues}\n            validationSchema={Yup.object().shape({\n              full_name: Yup.string().required(\"Full Name is required\"),\n              email: Yup.string()\n                .email(\"please enter valid email\")\n                .required(\"Email is required\"),\n              contact_number: Yup.string()\n                .matches(phoneRegEx, \"contact number is not valid\")\n                .required(\"contact number is required\"),\n              password:Yup.string()\n                .min(6, 'Password must be at least 6 characters')\n                .required('Password is required'),\n              cpassword:Yup.string()\n              .oneOf([Yup.ref('password'), null], 'Passwords must match')\n              .required('Confirm Password is required')\n            })}\n            onSubmit={(fields, { resetForm }) => {\n              const newUser = {\n                full_name: fields.full_name,\n                email: fields.email,\n                contact_number: fields.contact_number,\n                gender: fields.gender,\n                password:fields.password\n              };\n\n              axios.post(\"http://localhost:4000/register\", newUser).then(res => {\n                console.log(res.data);\n                this.props.history.push(\"/\");\n              });\n            }}\n            render={({ values, errors, status, touched }) => (\n              \n              <Form>\n                <div className=\"form-group\">\n                  <label htmlFor=\"full_name\">Full Name</label>\n                  <Field\n                    name=\"full_name\"\n                    type=\"text\"\n                    value={values.full_name}\n                    className={\n                      \"form-control\" +\n                      (errors.full_name && touched.full_name\n                        ? \" is-invalid\"\n                        : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"full_name\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Field\n                    name=\"email\"\n                    type=\"text\"\n                    className={\n                      \"form-control\" +\n                      (errors.email && touched.email ? \" is-invalid\" : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"email\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Contact Number</label>\n                  <Field\n                    name=\"contact_number\"\n                    type=\"text\"\n                    className={\n                      \"form-control\" +\n                      (errors.contact_number && touched.contact_number\n                        ? \" is-invalid\"\n                        : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"contact_number\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n\n          <RadioButtonGroup\n            id=\"gender\"\n            label=\"gender\"\n            value={values.gender}\n            error={errors.gender}\n            touched={touched.gender}\n          >\n            <Field\n              component={RadioButton}\n              name=\"gender\"\n              id=\"male\"\n              label=\"Male\"\n            />\n            <Field\n              component={RadioButton}\n              name=\"gender\"\n              id=\"female\"\n              label=\"Female\"\n            />\n          </RadioButtonGroup>\n\n          <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Field\n                    name=\"password\"\n                    type=\"password\"\n                    className={\n                      \"form-control\" +\n                      (errors.password && touched.password\n                        ? \" is-invalid\"\n                        : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"password\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"cpassword\">Confirm Password</label>\n                  <Field\n                    name=\"cpassword\"\n                    type=\"password\"\n                    className={\n                      \"form-control\" +\n                      (errors.cpassword && touched.cpassword\n                        ? \" is-invalid\"\n                        : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"cpassword\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button type=\"submit\" className=\"btn btn-primary mr-2\">\n                    Register\n                  </button>\n                  <button type=\"reset\" className=\"btn btn-secondary\">\n                    Reset\n                  </button>\n                </div>\n              </Form>\n            )}\n          />\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}