{"ast":null,"code":"var _jsxFileName = \"/home/pci-27/Documents/Mayank/MERN/learn-app/src/components/formik.component.js\";\nimport React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nclass App extends React.Component {\n  render() {\n    return React.createElement(Formik, {\n      initialValues: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      },\n      validationSchema: Yup.object().shape({\n        firstName: Yup.string().required('First Name is required'),\n        lastName: Yup.string().required('Last Name is required'),\n        email: Yup.string().email('Email is invalid').required('Email is required'),\n        password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n        confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm Password is required')\n      }),\n      onSubmit: fields => {\n        alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4));\n      },\n      render: ({\n        errors,\n        status,\n        touched\n      }) => React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"firstName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(Field, {\n        name: \"firstName\",\n        type: \"text\",\n        className: 'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"firstName\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"lastName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(Field, {\n        name: \"lastName\",\n        type: \"text\",\n        className: 'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"lastName\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Field, {\n        name: \"email\",\n        type: \"text\",\n        className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"email\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Field, {\n        name: \"password\",\n        type: \"password\",\n        className: 'form-control' + (errors.password && touched.password ? ' is-invalid' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"password\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"confirmPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(Field, {\n        name: \"confirmPassword\",\n        type: \"password\",\n        className: 'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"confirmPassword\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"button\", {\n        type: \"reset\",\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Reset\"))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport { App };","map":{"version":3,"sources":["/home/pci-27/Documents/Mayank/MERN/learn-app/src/components/formik.component.js"],"names":["React","Formik","Field","Form","ErrorMessage","Yup","App","Component","render","firstName","lastName","email","password","confirmPassword","object","shape","string","required","min","oneOf","ref","fields","alert","JSON","stringify","errors","status","touched"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Formik\n                initialValues={{\n                    firstName: '',\n                    lastName: '',\n                    email: '',\n                    password: '',\n                    confirmPassword: ''\n                }}\n                validationSchema={Yup.object().shape({\n                    firstName: Yup.string()\n                        .required('First Name is required'),\n                    lastName: Yup.string()\n                        .required('Last Name is required'),\n                    email: Yup.string()\n                        .email('Email is invalid')\n                        .required('Email is required'),\n                    password: Yup.string()\n                        .min(6, 'Password must be at least 6 characters')\n                        .required('Password is required'),\n                    confirmPassword:  Yup.string()\n                        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n                        .required('Confirm Password is required')\n                })}\n                onSubmit={fields => {\n                    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\n                }}\n                render={({ errors, status, touched }) => (\n                    <Form>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"firstName\">First Name</label>\n                            <Field name=\"firstName\" type=\"text\" className={'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"lastName\">Last Name</label>\n                            <Field name=\"lastName\" type=\"text\" className={'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"lastName\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Email</label>\n                            <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Password</label>\n                            <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                            <Field name=\"confirmPassword\" type=\"password\" className={'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <button type=\"submit\" className=\"btn btn-primary mr-2\">Register</button>\n                            <button type=\"reset\" className=\"btn btn-secondary\">Reset</button>\n                        </div>\n                    </Form>\n                )}\n            />\n        )\n    }\n}\n\nexport { App }; "]},"metadata":{},"sourceType":"module"}